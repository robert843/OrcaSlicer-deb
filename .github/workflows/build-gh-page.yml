name: Release workflow

on:
  release:
    types: [published]   # published = tylko gdy release zostanie opublikowany
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to fetch .deb from"
        required: true
        default: "v1.0.0"

jobs:
  create-gh-page:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Determine tag
        id: tag
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Download .deb from release
        run: |
          echo "Downloading from tag: ${{ steps.tag.outputs.tag }}"
          gh release download "${{ steps.tag.outputs.tag }}" \
            --pattern "*.deb" \
            --dir ./
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install required packages
        run: |
          sudo apt install -y jq createrepo-c coreutils gnupg2 dpkg-dev

      - name: Insert environment variables
        run: |
          echo GNUPGHOME="$(mktemp -d /tmp/pgpkeys-XXXXXX)" >> $GITHUB_ENV
          echo REPO_OWNER="$(echo "${GITHUB_REPOSITORY}" | cut -d/ -f1)" >> $GITHUB_ENV
          echo REPO_NAME="$(echo "${GITHUB_REPOSITORY}" | cut -d/ -f2)" >> $GITHUB_ENV

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.PRIVATE_KEY }}

      - name: Confirm GPG Key loaded
        run: |
          gpg --list-keys
          echo "${{ steps.import_gpg.outputs.fingerprint }}"


      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Set permissions on the _site directory
        run: sudo chown -R runner:docker _site

      - name: Build DEB and APT Repos
        run: |
          export GPG_FINGERPRINT="${{ steps.import_gpg.outputs.fingerprint }}"
          export ORIGIN="${{ steps.import_gpg.outputs.name }}"
          .github/scripts/build_repos.sh

      - name: Upload artifact

        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: create-gh-page
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1